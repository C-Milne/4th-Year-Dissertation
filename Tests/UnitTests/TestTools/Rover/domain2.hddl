(define (domain rover_domain)
	(:requirements :negative-preconditions
	:hierarchy
	:typing
	:method-preconditions
	)
	(:types
		waypoint - object
		mode - object
		store - object
		rover - object
		camera - object
		lander - object
		objective - object
	)
	(:predicates
		(at ?arg0 - rover ?arg1 - waypoint)
		(at_lander ?arg0 - lander ?arg1 - waypoint)
		(at_rock_sample ?arg0 - waypoint)
		(at_soil_sample ?arg0 - waypoint)
		(available ?arg0 - rover)
		(calibrated ?arg0 - camera ?arg1 - rover)
		(calibration_target ?arg0 - camera ?arg1 - objective)
		(can_traverse ?arg0 - rover ?arg1 - waypoint ?arg2 - waypoint)
		(channel_free ?arg0 - lander)
		(communicated_image_data ?arg0 - objective ?arg1 - mode)
		(communicated_rock_data ?arg0 - waypoint)
		(communicated_soil_data ?arg0 - waypoint)
		(empty ?arg0 - store)
		(equipped_for_imaging ?arg0 - rover)
		(equipped_for_rock_analysis ?arg0 - rover)
		(equipped_for_soil_analysis ?arg0 - rover)
		(full ?arg0 - store)
		(have_image ?arg0 - rover ?arg1 - objective ?arg2 - mode)
		(have_rock_analysis ?arg0 - rover ?arg1 - waypoint)
		(have_soil_analysis ?arg0 - rover ?arg1 - waypoint)
		(on_board ?arg0 - camera ?arg1 - rover)
		(store_of ?arg0 - store ?arg1 - rover)
		(supports ?arg0 - camera ?arg1 - mode)
		(visible ?arg0 - waypoint ?arg1 - waypoint)
		(visible_from ?arg0 - objective ?arg1 - waypoint)
		(visited ?arg0 - waypoint)
	)

	(:action take_image
		:parameters (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
		:precondition
			(and
				(calibrated ?i ?r)
				(on_board ?i ?r)
				(equipped_for_imaging ?r)
				(supports ?i ?m)
				(visible_from ?o ?p)
				(at ?r ?p)
			)
		:effect
			(and
				(not (calibrated ?i ?r))
				(have_image ?r ?o ?m)
			)
	)
)